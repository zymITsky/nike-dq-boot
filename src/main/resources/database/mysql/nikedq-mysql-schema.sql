
DROP DATABASE IF EXISTS nikedq;

CREATE DATABASE IF NOT EXISTS nikedq;

use nikedq;

-- =============================
-- Table of DQ_USER_PROFILE_TAB
-- =============================

DROP TABLE IF EXISTS DQ_USER_PROFILE_TAB;

CREATE TABLE IF NOT EXISTS DQ_USER_PROFILE_TAB (
	USER_ID INT NOT NULL AUTO_INCREMENT, 
	USER_NAME VARCHAR(30) NOT NULL, 
	USER_PASSWORD VARCHAR(200) NOT NULL, 
	CONSTRAINT pk_DQ_USER_PROFILE_TAB PRIMARY KEY (USER_ID)
)
-- DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
ENGINE = InnoDB
COMMENT = 'DQ: User Master Entity';

CREATE INDEX idx_USER_NAME_2_DQ_USER_PROFILE_TAB ON DQ_USER_PROFILE_TAB (USER_NAME);

-- ==========================
-- Table of DQ_USER_ROLE_TAB
-- ==========================

DROP TABLE IF EXISTS DQ_USER_ROLE_TAB;

CREATE TABLE IF NOT EXISTS DQ_USER_ROLE_TAB (
	USER_ROLE_ID INT NOT NULL AUTO_INCREMENT, 
	ROLE_NAME VARCHAR(30) NOT NULL, 
	CONSTRAINT pk_DQ_USER_ROLE_TAB PRIMARY KEY (USER_ROLE_ID)
)
-- DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
ENGINE = InnoDB
COMMENT = 'DQ: User Role Master Entity';

CREATE INDEX idx_ROLE_NAME_2_DQ_USER_ROLE_TAB ON DQ_USER_ROLE_TAB (ROLE_NAME);

-- ==================================
-- Table of DQ_USER_ROLE_MAPPING_TAB
-- ==================================

DROP TABLE IF EXISTS DQ_USER_ROLE_MAPPING_TAB;

CREATE TABLE IF NOT EXISTS DQ_USER_ROLE_MAPPING_TAB (
	USER_ID INT NOT NULL, 
	USER_ROLE_ID INT NOT NULL, 
	CONSTRAINT fk_DQ_USER_ROLE_MAPPING_TAB_USER_ID FOREIGN KEY (USER_ID) REFERENCES DQ_USER_PROFILE_TAB (USER_ID), 
	CONSTRAINT fk_DQ_USER_ROLE_MAPPING_TAB_USER_ROLE_ID FOREIGN KEY (USER_ROLE_ID) REFERENCES DQ_USER_ROLE_TAB (USER_ROLE_ID)
)
-- DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
ENGINE = InnoDB
COMMENT = 'DQ: User and Role Mapping';

CREATE INDEX IDX_DQ_USER_ROLE_MAPPING_TAB_USER_ID ON DQ_USER_ROLE_MAPPING_TAB (USER_ID);
CREATE INDEX IDX_DQ_USER_ROLE_MAPPING_TAB_USER_ROLE_ID ON DQ_USER_ROLE_MAPPING_TAB (USER_ROLE_ID);

-- =====================================
-- Table of DQ_USER_ROLE_PERMISSION_TAB
-- =====================================

DROP TABLE IF EXISTS DQ_USER_ROLE_PERMISSION_TAB;

CREATE TABLE IF NOT EXISTS DQ_USER_ROLE_PERMISSION_TAB (
	USER_ROLE_PERMISSION_ID INT NOT NULL AUTO_INCREMENT, 
	PERMISSION VARCHAR(30) NOT NULL, 
	CONSTRAINT pk_DQ_USER_ROLE_PERMISSION_TAB PRIMARY KEY (USER_ROLE_PERMISSION_ID)
)
-- DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
ENGINE = InnoDB
COMMENT = 'DQ: Role Permission Master Entity';

-- =============================================
-- Table of DQ_USER_ROLE_PERMISSION_MAPPING_TAB
-- =============================================

DROP TABLE IF EXISTS DQ_USER_ROLE_PERMISSION_MAPPING_TAB;

CREATE TABLE IF NOT EXISTS DQ_USER_ROLE_PERMISSION_MAPPING_TAB (
	USER_ROLE_ID INT NOT NULL, 
	USER_ROLE_PERMISSION_ID INT NOT NULL, 
	CONSTRAINT fk_DQ_USER_ROLE_PERMISSION_MAPPING_TAB_USER_ROLE_ID FOREIGN KEY (USER_ROLE_ID) REFERENCES DQ_USER_ROLE_TAB (USER_ROLE_ID), 
	CONSTRAINT fk_DQ_USER_ROLE_PERMISSION_MAPPING_TAB_USER_ROLE_PERMISSION_ID FOREIGN KEY (USER_ROLE_PERMISSION_ID) REFERENCES DQ_USER_ROLE_PERMISSION_TAB (USER_ROLE_PERMISSION_ID)
)
-- DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci
ENGINE = InnoDB
COMMENT = 'DQ: User Role and Permission Mapping';

CREATE INDEX IDX_DQ_USER_ROLE_PERMISSION_MAPPING_TAB_USER_ROLE_ID ON DQ_USER_ROLE_PERMISSION_MAPPING_TAB (USER_ROLE_ID);
CREATE INDEX IDX_DQ_USER_ROLE_PERMISSION_MAPPING_TAB_USER_ROLE_PERMISSION_ID ON DQ_USER_ROLE_PERMISSION_MAPPING_TAB (USER_ROLE_PERMISSION_ID);

-- #######################################################################################################################################################

-- ==============================
-- Table of DQ_DB_CONNECTION_TAB
-- ==============================

CREATE TABLE DQ_DB_CONNECTION_TAB (
	CONNECTION_ID INT NOT NULL AUTO_INCREMENT, 
	CONNECTION_NAME VARCHAR(300) DEFAULT '' NOT NULL UNIQUE,
	CONNECTION_DESCRIPTION VARCHAR(500) DEFAULT '' NOT NULL,
	CONNECTION_SERVER_TYPE VARCHAR(30) DEFAULT '' NOT NULL,
	CONNECTION_SERVER_HOST VARCHAR(100) DEFAULT '' NOT NULL,
	CONNECTION_DB_LINK VARCHAR(100) DEFAULT '' NOT NULL,
	CONNECTION_CREATED_BY VARCHAR(20) DEFAULT '' NOT NULL,
	CONNECTION_CREATED_DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	CONSTRAINT pk_DQ_DB_CONNECTION_TAB PRIMARY KEY (CONNECTION_ID)
);

CREATE INDEX IDX_1_DQ_DB_CONNECTION_TAB ON DQ_DB_CONNECTION_TAB (CONNECTION_NAME);

-- =============================
-- Table of DQ_RULE_TC_CASE_TAB
-- =============================

CREATE TABLE DQ_RULE_TC_CASE_TAB (
	RULE_CASE_ID INT NOT NULL AUTO_INCREMENT,
	CONNECTION_ID INT NOT NULL,
	RULE_CASE_NAME VARCHAR(300) DEFAULT '' NOT NULL UNIQUE,
	RULE_CASE_DESCRIPTION VARCHAR(500) DEFAULT '' NOT NULL,
	RULE_CASE_TARGET_DB VARCHAR(200) DEFAULT '' NOT NULL,
	RULE_CASE_TARGET_TABLE VARCHAR(200) DEFAULT '' NOT NULL,
	RULE_CASE_ORIG_TAB_SIZE INT NOT NULL,
	RULE_CASE_ROWS_GAP_GT DOUBLE NOT NULL,
	RULE_CASE_ROWS_GAP_LT DOUBLE NOT NULL,
	RULE_CASE_SEVERITY VARCHAR(25) DEFAULT '' NOT NULL,
	RULE_CASE_CREATED_BY VARCHAR(20) DEFAULT '' NOT NULL,
	RULE_CASE_CREATED_DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	CONSTRAINT pk_DQ_RULE_TC_CASE_TAB PRIMARY KEY (RULE_CASE_ID)
);

CREATE INDEX IDX_1_DQ_RULE_TC_CASE_TAB ON DQ_RULE_TC_CASE_TAB (CONNECTION_ID, RULE_CASE_TARGET_DB, RULE_CASE_TARGET_TABLE, RULE_CASE_NAME);
CREATE INDEX IDX_2_DQ_RULE_TC_CASE_TAB ON DQ_RULE_TC_CASE_TAB (RULE_CASE_NAME);

-- =========================================
-- Table of DQ_RULE_TC_CASE_RUN_HISTORY_TAB
-- =========================================

create table DQ_RULE_TC_CASE_RUN_HISTORY_TAB (
	RULE_CASE_RUN_ID INT NOT NULL AUTO_INCREMENT,
	RULE_CASE_ID int not null,
	RULE_CASE_RUN_ROWS int not null,
	RULE_CASE_RUN_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	RULE_CASE_RUN_END_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	CONSTRAINT pk_DQ_RULE_TC_CASE_RUN_HISTORY_TAB PRIMARY KEY (RULE_CASE_RUN_ID)
);

create index IDX_1_DQ_RULE_TC_CASE_RUN_HISTORY_TAB on DQ_RULE_TC_CASE_RUN_HISTORY_TAB (RULE_CASE_ID, RULE_CASE_RUN_START_DATE, RULE_CASE_RUN_END_DATE);

-- =============================
-- Table of DQ_RULE_QS_CASE_TAB
-- =============================

create table DQ_RULE_QS_CASE_TAB (
	RULE_CASE_ID INT NOT NULL AUTO_INCREMENT,
	CONNECTION_ID int not null,
	RULE_CASE_NAME varchar (300) default '' not null unique,
	RULE_CASE_DESCRIPTION varchar (500) default '' not null,
	RULE_CASE_SQL varchar (2000) default '' not null,
	RULE_CASE_SEVERITY varchar (25) default '' not null,
	RULE_CASE_CREATED_BY varchar (20) default '' not null,
	RULE_CASE_CREATED_DATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT pk_DQ_RULE_QS_CASE_TAB PRIMARY KEY (RULE_CASE_ID)
);

create index IDX_1_DQ_RULE_QS_CASE_TAB on DQ_RULE_QS_CASE_TAB (CONNECTION_ID, RULE_CASE_NAME);
create index IDX_2_DQ_RULE_QS_CASE_TAB on DQ_RULE_QS_CASE_TAB (RULE_CASE_NAME);

-- =========================================
-- Table of DQ_RULE_QS_CASE_RUN_HISTORY_TAB
-- =========================================

create table DQ_RULE_QS_CASE_RUN_HISTORY_TAB (
	RULE_CASE_RUN_ID INT NOT NULL AUTO_INCREMENT,
	RULE_CASE_ID int not null,
	RULE_CASE_RUN_RESULT int not null,
	RULE_CASE_RUN_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	RULE_CASE_RUN_END_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	CONSTRAINT pk_DQ_RULE_QS_CASE_RUN_HISTORY_TAB PRIMARY KEY (RULE_CASE_RUN_ID)
);

create index IDX_1_DQ_RULE_QS_CASE_RUN_HISTORY_TAB on DQ_RULE_QS_CASE_RUN_HISTORY_TAB (RULE_CASE_ID, RULE_CASE_RUN_START_DATE, RULE_CASE_RUN_END_DATE);

-- ================================
-- Table of DQ_RULE_R21FC_CASE_TAB
-- ================================

create table DQ_RULE_R21FC_CASE_TAB (
	RULE_CASE_ID INT NOT NULL AUTO_INCREMENT,
	CONNECTION_ID int not null,
	RULE_CASE_NAME varchar (300) default '' not null unique,
	RULE_CASE_OWNER varchar (50) default '' not null,
	RULE_CASE_BUSINESS_FUNCTION varchar (500) default '' not null,
	RULE_CASE_DESCRIPTION varchar (500) default '' not null,
	RULE_CASE_TARGET_DB varchar (200) default '' not null,
	RULE_CASE_TARGET_TABLE varchar (200) default '' not null,
	RULE_CASE_TARGET_FIELD varchar (200) default '' not null,
	RULE_CASE_LAST_MODIFIED_BY varchar (50) default '' not null,
	RULE_CASE_LAST_MODIFIED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT pk_DQ_RULE_R21FC_CASE_TAB PRIMARY KEY (RULE_CASE_ID)
);

create index IDX_1_DQ_RULE_R21FC_CASE_TAB on DQ_RULE_R21FC_CASE_TAB (RULE_CASE_NAME);

-- ============================================
-- Table of DQ_RULE_R21FC_CASE_RUN_HISTORY_TAB
-- ============================================

create table DQ_RULE_R21FC_CASE_RUN_HISTORY_TAB (
	RULE_CASE_RUN_ID INT NOT NULL AUTO_INCREMENT,
	RULE_CASE_ID int not null,
	RULE_CASE_RUN_RESULT varchar (20) default '' not null,
	RULE_CASE_TGT_MEASURE_VAL varchar (20) default '' not null,
	RULE_CASE_TOLERANCE int not null,
	RULE_CASE_RUN_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	RULE_CASE_RUN_END_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT pk_DQ_RULE_R21FC_CASE_RUN_HISTORY_TAB PRIMARY KEY (RULE_CASE_RUN_ID)
);

create index IDX_1_DQ_RULE_R21FC_CASE_RUN_HISTORY_TAB on DQ_RULE_R21FC_CASE_RUN_HISTORY_TAB (RULE_CASE_ID);

-- ================================
-- Table of DQ_RULE_R33MC_CASE_TAB
-- ================================

create table DQ_RULE_R33MC_CASE_TAB (
	RULE_CASE_ID INT NOT NULL AUTO_INCREMENT,
	RULE_CASE_NAME varchar (300) default '' not null unique,
	RULE_CASE_OWNER varchar (50) default '' not null,
	RULE_CASE_BUSINESS_FUNCTION varchar (500) default '' not null,
	RULE_CASE_DESCRIPTION varchar (500) default '' not null,
	SRC_CONNECTION_ID int not null,
	RULE_CASE_SOURCE_DB varchar (200) default '' not null,
	RULE_CASE_SOURCE_TABLE varchar (200) default '' not null,
	RULE_CASE_SOURCE_FIELD varchar (200) default '' not null,
	RULE_CASE_SOURCE_CONDITION_FIELD varchar (500) default '' not null,
	TGT_CONNECTION_ID int not null,
	RULE_CASE_TARGET_DB varchar (200) default '' not null,
	RULE_CASE_TARGET_TABLE varchar (200) default '' not null,
	RULE_CASE_TARGET_FIELD varchar (200) default '' not null,
	RULE_CASE_TARGET_CONDITION_FIELD varchar (500) default '' not null,
	RULE_CASE_LAST_MODIFIED_BY varchar (50) default '' not null,
	RULE_CASE_LAST_MODIFIED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT pk_DQ_RULE_R33MC_CASE_TAB PRIMARY KEY (RULE_CASE_ID)
);

create index IDX_1_DQ_RULE_R33MC_CASE_TAB on DQ_RULE_R33MC_CASE_TAB (RULE_CASE_NAME);

-- ============================================
-- Table of DQ_RULE_R33MC_CASE_RUN_HISTORY_TAB
-- ============================================

create table DQ_RULE_R33MC_CASE_RUN_HISTORY_TAB (
	RULE_CASE_RUN_ID INT NOT NULL AUTO_INCREMENT,
	RULE_CASE_ID int not null,
	RULE_CASE_RUN_RESULT varchar (20) default '' not null,
	RULE_CASE_SRC_MEASURE_VAL int not null,
	RULE_CASE_TGT_MEASURE_VAL int not null,
	RULE_CASE_DIFF_PCNT int not null,
	RULE_CASE_TOLERANCE int not null,
	RULE_CASE_RUN_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	RULE_CASE_RUN_END_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT pk_DQ_RULE_R33MC_CASE_RUN_HISTORY_TAB PRIMARY KEY (RULE_CASE_RUN_ID)
);

create index IDX_1_DQ_RULE_R33MC_CASE_RUN_HISTORY_TAB on DQ_RULE_R33MC_CASE_RUN_HISTORY_TAB (RULE_CASE_ID);

-- ==============================
-- Table of SALES_DAY_LEVEL_FACT
-- ==============================

create table SALES_DAY_LEVEL_FACT (
	TOT_NET_SALES_RTL_AMT_PLUS_VAT int not null,
	TRAN_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- ============================================
-- Table of STORE_TRAFFIC_AND_TRANS_COUNT_FACT
-- ============================================

create table STORE_TRAFFIC_AND_TRANS_COUNT_FACT (
	TRAFFIC_COUNT int not null,
	DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
